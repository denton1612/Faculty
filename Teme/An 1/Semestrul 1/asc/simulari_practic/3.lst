     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit, scanf, fopen, fprintf, fclose
     6                                  import exit msvcrt.dll
     7                                  import scanf msvcrt.dll
     8                                  import fopen msvcrt.dll
     9                                  import fprintf msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  
    12                                  ; Sa se citeasca un numar n de la tastatura, apoi sa se citeasca mai multe cuvinte pana cand se citeste caracterul '#'. Sa se scrie intr-un fisier text toate cuvintele care au cel putin n vocale
    13                                  
    14                                  segment data use32 class=data
    15 00000000 FFFFFFFF                    descriptor_fisier dd -1
    16 00000004 00000000                    n dd 0
    17                                      stop equ '#'
    18 00000008 6F75747075742E7478-         nume_fisier db 'output.txt', 0
    18 00000011 7400               
    19 00000013 7700                        mod_acces db 'w', 0
    20 00000015 6165696F752A00              sir_vocale db 'aeiou*', 0
    21                                      len_vocale equ $-sir_vocale
    22 0000001C 257500                      formats1 db '%u', 0
    23 0000001F 257300                      formats2 db '%s', 0
    24 00000022 25730A00                    formatpf db '%s', 10, 0
    25 00000026 <res 00000064>              cuvant_curent resb 100
    26 0000008A 00000000                    nr_vocale_curent dd 0
    27                                      
    28                                  segment code use32 class=code
    29                                  
    30                                      ; subprogram care verifica daca caracterul memorat de pe stiva este vocala (eax : bool)
    31                                      verifica_vocala:
    32 00000000 8A442404                        mov al, [esp+4]
    33 00000004 B907000000                      mov ecx, len_vocale
    34 00000009 BF[15000000]                    mov edi, sir_vocale
    35                                          repeta1:
    36 0000000E AE                                  scasb
    37 0000000F E0FD                            loopne repeta1
    38 00000011 83F900                          cmp ecx, 0
    39 00000014 7607                            jna nu_e_vocala
    40 00000016 B801000000                      mov eax, 1
    41 0000001B EB05                            jmp final
    42                                          nu_e_vocala:
    43 0000001D B800000000                          mov eax, 0
    44                                          final:
    45 00000022 C3                                  ret
    46                                      start:
    47 00000023 68[04000000]                    push dword n
    48 00000028 68[1C000000]                    push dword formats1
    49 0000002D FF15[00000000]                  call [scanf]
    50 00000033 83C408                          add esp, 4*2
    51                                      
    52 00000036 68[13000000]                    push dword mod_acces
    53 0000003B 68[08000000]                    push dword nume_fisier
    54 00000040 FF15[00000000]                  call [fopen]
    55 00000046 83C408                          add esp, 4*2
    56                                          
    57 00000049 83F800                          cmp eax, 0
    58 0000004C 7473                            je sfarsit 
    59                                          
    60 0000004E A3[00000000]                    mov [descriptor_fisier], eax
    61                                          
    62                                          repeta:
    63 00000053 C705[8A000000]0000-             mov dword [nr_vocale_curent], 0
    63 0000005B 0000               
    64                                          
    65 0000005D 68[26000000]                    push dword cuvant_curent
    66 00000062 68[1F000000]                    push dword formats2
    67 00000067 FF15[00000000]                  call [scanf]
    68 0000006D 83C408                          add esp, 4*2
    69                                          
    70 00000070 803D[26000000]23                cmp byte [cuvant_curent], stop
    71 00000077 7448                            je sfarsit
    72 00000079 BE[26000000]                    mov esi, cuvant_curent
    73 0000007E B964000000                      mov ecx, 100
    74                                          
    75                                          parcurge:
    76 00000083 AC                                  lodsb
    77 00000084 3C00                                cmp al, 0
    78 00000086 7414                                je final_cuvant
    79 00000088 0FB6C0                              movzx eax, al
    80 0000008B 50                                  push eax
    81 0000008C E86FFFFFFF                          call verifica_vocala
    82 00000091 83C404                              add esp, 4
    83 00000094 0105[8A000000]                      add [nr_vocale_curent], eax
    84 0000009A E2E7                            loop parcurge
    85                                          
    86                                          final_cuvant:
    87 0000009C A1[8A000000]                        mov eax, [nr_vocale_curent]
    88 000000A1 3B05[04000000]                      cmp eax, [n]
    89 000000A7 72AA                                jb repeta
    90 000000A9 68[26000000]                        push dword cuvant_curent
    91 000000AE 68[22000000]                        push dword formatpf
    92 000000B3 FF35[00000000]                      push dword [descriptor_fisier]
    93 000000B9 FF15[00000000]                      call [fprintf]
    94                                              
    95 000000BF EB92                            jmp repeta
    96                                          
    97                                      sfarsit:
    98 000000C1 FF35[00000000]                  push dword [descriptor_fisier]
    99 000000C7 FF15[00000000]                  call [fclose]
   100 000000CD 83C404                          add esp, 4
   101                                          
   102 000000D0 6A00                            push dword 0
   103 000000D2 FF15[00000000]                  call [exit]
