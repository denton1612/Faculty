     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  ; Se da un sir de caractere S. Sa se construiasca sirul D care sa contina toate literele mici din sirul S.
    13                                  segment data use32 class=data
    14 00000000 61416242322578              s db 'a', 'A', 'b', 'B', '2', '%', 'x'
    15 00000007 07                          l db $ - s
    16 00000008 <res 00000008>              d resb $ - s
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 8B0D[07000000]                  mov ecx, [l]
    22 00000006 FC                              cld
    23 00000007 BE[00000000]                    mov esi, s
    24 0000000C BF[08000000]                    mov edi, d
    25                                          repeta:
    26 00000011 AC                                  lodsb
    27 00000012 3C61                                cmp al, 'a'
    28 00000014 7205                                jb sfarsit
    29 00000016 3C7A                                cmp al, 'z'
    30 00000018 7701                                ja sfarsit
    31 0000001A AA                                  stosb
    32                                              sfarsit:
    33 0000001B E2F4                            loop repeta
    34                                      
    35                                          ; exit(0)
    36 0000001D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    37 0000001F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
