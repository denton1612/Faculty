     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, scanf, printf
     5                                  import exit msvcrt.dll
     6                                  import scanf msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  
     9                                  segment data use32 class=data
    10                                      ; Sa se citeasca de la tastatura doua numere (in baza 10) si sa se calculeze produsul lor. Rezultatul inmultirii se va salva in memorie in variabila "rezultat" (definita in segmentul de date).
    11 00000000 00000000                    a dd 0
    12 00000004 00000000                    b dd 0
    13 00000008 50726F647573756C20-         mesaj db 'Produsul numerelor este %u', 0
    13 00000011 6E756D6572656C6F72-
    13 0000001A 206573746520257500 
    14 00000023 257500                      format_a db '%u', 0
    15 00000026 257500                      format_b db '%u', 0
    16 00000029 0000000000000000            rezultat dq 0
    17                                      
    18                                      
    19                                  segment code use32 class=code
    20                                      start:
    21                                      ; citim de la tastatura un numar in baza 10 pe care il salvam la offset ul a
    22 00000000 68[00000000]                    push dword a
    23 00000005 68[23000000]                    push format_a
    24 0000000A FF15[00000000]                  call [scanf]
    25 00000010 83C408                          add esp, 4*2
    26 00000013 A1[00000000]                    mov eax, [a]
    27                                          
    28 00000018 50                              push eax
    29                                      ; citim de la tastatura un numar in baza 10 pe care il salvam la offset ul a   
    30 00000019 68[04000000]                    push dword b
    31 0000001E 68[26000000]                    push format_b
    32 00000023 FF15[00000000]                  call [scanf]
    33 00000029 83C408                          add esp, 4*2
    34 0000002C 8B1D[04000000]                  mov ebx, [b]
    35                                      ; salvez in rezultat produsul ax*bx = a*b   
    36 00000032 58                              pop eax
    37 00000033 F7E3                            mul ebx
    38 00000035 A3[29000000]                    mov [rezultat], eax
    39 0000003A 8915[2D000000]                  mov [rezultat+4], edx 
    40                                          
    41                                      ; optional! afisez valoarea rezultatului (dword)    
    42 00000040 FF35[29000000]                  push dword [rezultat]
    43 00000046 68[08000000]                    push mesaj
    44 0000004B FF15[00000000]                  call [printf]
    45 00000051 83C408                          add esp, 4*2
    46                                          
    47 00000054 6A00                            push dword 0
    48 00000056 FF15[00000000]                  call [exit]
