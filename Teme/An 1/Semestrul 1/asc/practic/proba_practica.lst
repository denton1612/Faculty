     1                                  bits 32
     2                                  
     3                                  global start
     4                                  extern exit, scanf, printf, fopen, fprintf, fclose
     5                                  import exit msvcrt.dll
     6                                  import scanf msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  import fopen msvcrt.dll
     9                                  import fprintf msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  
    12                                  ; Sa se citeasca de la tastatura mai multe numere pana la citirea valorii 0. Sa se scrie intr-un fisier, separate de spatii, doar acele numere pozitive care au numar par de biti 0 (cu valoarea 0).
    13                                  
    14                                  segment data use32 class=data
    15 00000000 00000000                    numar_curent dd 0
    16 00000004 00                          nr_biti_1 db 0
    17 00000005 496E74726F64756365-         citire db 'Introduceti un numar intreg: ', 0
    17 0000000E 746920756E206E756D-
    17 00000017 617220696E74726567-
    17 00000020 3A2000             
    18 00000023 256400                      formats db '%d', 0
    19 00000026 25752000                    formatp db '%u ', 0
    20 0000002A 5C5C4D61635C486F6D-         nume_fisier db '\\Mac\Home\Desktop\facultate teme\asc\practic\rezultat.txt', 0
    20 00000033 655C4465736B746F70-
    20 0000003C 5C666163756C746174-
    20 00000045 652074656D655C6173-
    20 0000004E 635C70726163746963-
    20 00000057 5C72657A756C746174-
    20 00000060 2E74787400         
    21 00000065 7700                        mod_acces db 'w', 0
    22 00000067 FFFFFFFF                    descriptor_fisier dd -1
    23                                      
    24                                  segment code use32 class=code
    25                                      start:
    26 00000000 68[65000000]                    push dword mod_acces
    27 00000005 68[2A000000]                    push dword nume_fisier
    28 0000000A FF15[00000000]                  call [fopen]
    29 00000010 83C408                          add esp, 4*2
    30 00000013 83F800                          cmp eax, 0
    31 00000016 0F8481000000                    je sfarsit
    32 0000001C A3[67000000]                    mov [descriptor_fisier], eax
    33                                          
    34                                          repeta:
    35 00000021 68[05000000]                        push dword citire
    36 00000026 FF15[00000000]                      call [printf]
    37 0000002C 83C404                              add esp, 4
    38                                              
    39 0000002F C605[04000000]00                    mov byte [nr_biti_1], 0
    40 00000036 68[00000000]                        push dword numar_curent
    41 0000003B 68[23000000]                        push dword formats
    42 00000040 FF15[00000000]                      call [scanf]
    43 00000046 83C408                              add esp, 4*2
    44 00000049 833D[00000000]00                    cmp dword [numar_curent], 0
    45 00000050 7CCF                                jl repeta
    46 00000052 743A                                je final
    47 00000054 A1[00000000]                        mov eax, [numar_curent]
    48 00000059 B920000000                          mov ecx, 32
    49                                              roteste:
    50 0000005E D1D0                                    rcl eax, 1
    51 00000060 8015[04000000]00                        adc byte [nr_biti_1], 0
    52 00000067 E2F5                                loop roteste
    53 00000069 F605[04000000]01                    test byte [nr_biti_1], 1h
    54 00000070 75AF                                jnz repeta
    55 00000072 FF35[00000000]                      push dword [numar_curent]
    56 00000078 68[26000000]                        push dword formatp
    57 0000007D FF35[67000000]                      push dword [descriptor_fisier]
    58 00000083 FF15[00000000]                      call [fprintf]
    59 00000089 83C40C                              add esp, 4*3
    60 0000008C EB93                            jmp repeta
    61                                          
    62                                          final:
    63 0000008E FF35[67000000]                      push dword [descriptor_fisier]
    64 00000094 FF15[00000000]                      call [fclose]
    65 0000009A 83C404                              add esp, 4
    66                                          sfarsit:
    67 0000009D 6A00                                push dword 0
    68 0000009F FF15[00000000]                      call [exit]
